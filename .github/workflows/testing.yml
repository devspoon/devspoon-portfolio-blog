name: Django Tests

on:
    workflow_dispatch:

# on:
#     push:
#         branches: [ "main" ]
#     pull_request:
#         branches: [ "main" ]

# on:
#   schedule:
#     - cron:  '*/15 * * * *'

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
              python-version: ["3.11"]
              redis-version: ["5"]
      
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements/dev_ubuntu22.04.txt
            - name: Start Redis
              uses: supercharge/redis-github-action@1.5.0
              with:
                redis-version: ${{ matrix.redis-version }}
                # redis-port: 6379
            - name: Add environment variables to .env
              run: |
                    echo "DEBUG_STATE=False" >> .env
                    echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
                    echo "ALLOWED_HOSTS_IP=*" >> .env
                    echo "MAILGUN_ACCESS_KEY=${{ secrets.MAILGUN_ACCESS_KEY }}" >> .env
                    echo "MAILGUN_SERVER_NAME=${{ secrets.MAILGUN_SERVER_NAME }}" >> .env
                    echo "MAILGUN_DEFAULT_FROM_EMAIL=${{ secrets.MAILGUN_DEFAULT_FROM_EMAIL }}" >> .env
                    echo "SENDINBLUE_EMAIL_DOMAIN=${{ secrets.SENDINBLUE_EMAIL_DOMAIN }}" >> .env
                    echo "SENDINBLUE_EMAIL_HOST_USER=${{ secrets.SENDINBLUE_EMAIL_HOST_USER }}" >> .env
                    echo "SENDINBLUE_EMAIL_HOST_API=${{ secrets.SENDINBLUE_EMAIL_HOST_API }}" >> .env
                    echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
                    echo "SENDGRID_DEFAULT_FROM_EMAIL=${{ secrets.SENDGRID_DEFAULT_FROM_EMAIL }}" >> .env
                    echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
                    echo "NAVER_SECRET_KEY=${{ secrets.NAVER_SECRET_KEY }}" >> .env
            - name: Coverage report
              run: |
                pip install coverage
                coverage run manage.py test
                coverage report
